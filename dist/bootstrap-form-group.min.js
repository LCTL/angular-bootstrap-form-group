(function(){var r,n;n='<div class="form-group {{ formGroupClass }}" ng-class="{ \'has-error\': hasError && formDirty }">\n  <label for="{{ for }}" ng-bind="label" class="control-label {{ labelClass }}"></label>\n  <span></span>\n  <p ng-repeat="error in errors" ng-if="error.notValid" class="text-danger" ng-bind="error.message"></p>\n</div>',r=["input","select","textarea"],angular.module("bootstrap.formGroup",[]).directive("formGroup",["$injector",function(e){return{restrict:"AE",template:n,replace:!0,transclude:!0,require:"^form",scope:{label:"@",formGroupClass:"@",labelClass:"@"},link:function(n,t,a,o,s){var l,i,u,f,p,c,m,g,d,h,$;for(s(function(r){return t.find("span").replaceWith(r)}),p=null,h=0,$=r.length;$>h&&(d=r[h],p=t.find(d),!(p.length>0));h++);if(c=p.attr("id"),m=p.attr("name")){for(u=p.parent();"FORM"!==u.prop("tagName");)u=u.parent();return f=u.attr("name"),n["for"]=c,n.form=n.form,g=[f,m,"$invalid"].join("."),l=[f,m,"$dirty"].join("."),i=[f,m,"$error"].join("."),n.$parent.$watch(g,function(r){return n.hasError=r}),n.$parent.$watch(l,function(r){return n.formDirty=r}),n.$parent.$watch(i,function(r){var t,a,o,s,l,i;n.errors=[],i=[];for(l in r)s=r[l],o=p.attr("ng-em-"+l),o||(o=l),e.has("$translate")?(t=e.get("$translate"),a=function(r,e,a,o){return t(r,{value:e}).then(function(r){return n.errors.push({name:a,message:r,notValid:o})})},i.push(a(o,p.attr("ng-"+l)||p.attr(l),l,s))):i.push(n.errors.push({name:l,message:o,notValid:s}));return i},!0)}}}}])}).call(this);